package masc

file_number 0 "/soe/mzakharo/MASC-AI-Synthesized-Cryptoprocessor/AI_generated/top_level/masc.x"

top fn __masc__execute(instruction: bits[32], rs1: bits[32], rs2: bits[32]) -> (bits[32], bits[1]) {
  literal.10089: bits[1] = literal(value=0, id=10089, pos=[(0,3,32)])
  bit_slice.2243: bits[5] = bit_slice(rs2, start=0, width=5, id=2243, pos=[(0,3,32)])
  literal.10090: bits[6] = literal(value=32, id=10090, pos=[(0,4,41)])
  concat.10088: bits[6] = concat(literal.10089, bit_slice.2243, id=10088, pos=[(0,3,32)])
  literal.2244: bits[32] = literal(value=32, id=2244, pos=[(0,4,41)])
  rotation_1__8: bits[1] = bit_slice(rs1, start=0, width=1, id=3812, pos=[(0,4,33)])
  rotation_1__7: bits[31] = bit_slice(rs1, start=1, width=31, id=3809, pos=[(0,4,9)])
  byte0__1: bits[8] = bit_slice(rs1, start=0, width=8, id=3818, pos=[(0,4,33)])
  rotation_2__7: bits[24] = bit_slice(rs1, start=8, width=24, id=3815, pos=[(0,4,9)])
  rotation_1__12: bits[28] = bit_slice(rs1, start=0, width=28, id=3776, pos=[(0,4,33)])
  rotation_1__11: bits[4] = bit_slice(rs1, start=28, width=4, id=3773, pos=[(0,4,9)])
  rotation_2__12: bits[2] = bit_slice(rs1, start=0, width=2, id=3782, pos=[(0,4,33)])
  rotation_2__11: bits[30] = bit_slice(rs1, start=2, width=30, id=3779, pos=[(0,4,9)])
  literal.371: bits[32] = literal(value=6, id=371, pos=[(0,266,15)])
  literal.376: bits[32] = literal(value=7, id=376, pos=[(0,267,15)])
  literal.391: bits[32] = literal(value=10, id=391, pos=[(0,270,15)])
  literal.396: bits[32] = literal(value=11, id=396, pos=[(0,271,15)])
  sub.10086: bits[6] = sub(literal.10090, concat.10088, id=10086, pos=[(0,4,44)])
  sub.2259: bits[32] = sub(literal.2244, rs2, id=2259, pos=[(0,13,37)])
  literal.3784: bits[7] = literal(value=0, id=3784, pos=[(0,4,9)])
  rotation_3__4: bits[25] = bit_slice(rs1, start=7, width=25, id=3785, pos=[(0,4,9)])
  rotation_1__1: bits[32] = concat(rotation_1__8, rotation_1__7, id=7959, pos=[(0,4,26)])
  rotation_2__1: bits[32] = concat(byte0__1, rotation_2__7, id=7960, pos=[(0,4,26)])
  rotation_1: bits[32] = concat(rotation_1__12, rotation_1__11, id=7961, pos=[(0,4,26)])
  rotation_2: bits[32] = concat(rotation_2__12, rotation_2__11, id=7962, pos=[(0,4,26)])
  rotation_3__5: bits[7] = bit_slice(rs1, start=0, width=7, id=3788, pos=[(0,4,33)])
  bit_slice.7899: bits[2] = bit_slice(rs1, start=26, width=2, id=7899, pos=[(0,211,46)])
  bit_slice.7900: bits[2] = bit_slice(rs1, start=5, width=2, id=7900, pos=[(0,211,46)])
  bit_slice.7893: bits[21] = bit_slice(rs1, start=0, width=21, id=7893, pos=[(0,211,46)])
  bit_slice.7894: bits[21] = bit_slice(rs1, start=6, width=21, id=7894, pos=[(0,211,46)])
  bit_slice.7895: bits[21] = bit_slice(rs1, start=11, width=21, id=7895, pos=[(0,211,46)])
  bit_slice.7909: bits[2] = bit_slice(rs1, start=11, width=2, id=7909, pos=[(0,117,18)])
  bit_slice.7910: bits[2] = bit_slice(rs1, start=20, width=2, id=7910, pos=[(0,117,18)])
  bit_slice.7906: bits[11] = bit_slice(rs1, start=21, width=11, id=7906, pos=[(0,117,18)])
  bit_slice.7907: bits[11] = bit_slice(rs1, start=0, width=11, id=7907, pos=[(0,117,18)])
  bit_slice.7908: bits[11] = bit_slice(rs1, start=9, width=11, id=7908, pos=[(0,117,18)])
  bit_slice.7916: bits[3] = bit_slice(rs1, start=4, width=3, id=7916, pos=[(0,99,23)])
  bit_slice.7917: bits[3] = bit_slice(rs1, start=15, width=3, id=7917, pos=[(0,99,23)])
  bit_slice.7793: bits[11] = bit_slice(rs1, start=17, width=11, id=7793, pos=[(0,99,23)])
  rotation_1__14: bits[6] = bit_slice(rs1, start=0, width=6, id=3836, pos=[(0,4,33)])
  bit_slice.7926: bits[6] = bit_slice(rs1, start=5, width=6, id=7926, pos=[(0,125,26)])
  bit_slice.7927: bits[6] = bit_slice(rs1, start=19, width=6, id=7927, pos=[(0,125,26)])
  bit_slice.7897: bits[5] = bit_slice(rs1, start=27, width=5, id=7897, pos=[(0,211,46)])
  bit_slice.7898: bits[5] = bit_slice(rs1, start=0, width=5, id=7898, pos=[(0,211,46)])
  bit_slice.7925: bits[5] = bit_slice(rs1, start=14, width=5, id=7925, pos=[(0,125,26)])
  bit_slice.7944: bits[6] = bit_slice(rs1, start=10, width=6, id=7944, pos=[(0,184,44)])
  rotation_2__18: bits[6] = bit_slice(rs2, start=0, width=6, id=3896, pos=[(0,4,33)])
  bit_slice.7942: bits[10] = bit_slice(rs1, start=0, width=10, id=7942, pos=[(0,184,44)])
  bit_slice.7943: bits[10] = bit_slice(rs2, start=22, width=10, id=7943, pos=[(0,184,44)])
  bit_slice.7950: bits[6] = bit_slice(rs1, start=13, width=6, id=7950, pos=[(0,225,28)])
  bit_slice.7951: bits[6] = bit_slice(rs1, start=23, width=6, id=7951, pos=[(0,225,28)])
  bit_slice.7948: bits[13] = bit_slice(rs1, start=0, width=13, id=7948, pos=[(0,225,28)])
  bit_slice.7949: bits[13] = bit_slice(rs1, start=10, width=13, id=7949, pos=[(0,225,28)])
  rotation_1__19: bits[13] = bit_slice(rs1, start=19, width=13, id=7869, pos=[(0,225,28)])
  literal.386: bits[32] = literal(value=9, id=386, pos=[(0,269,15)])
  bit_slice.7903: bits[9] = bit_slice(rs1, start=12, width=9, id=7903, pos=[(0,117,18)])
  bit_slice.7904: bits[9] = bit_slice(rs1, start=23, width=9, id=7904, pos=[(0,117,18)])
  bit_slice.7905: bits[9] = bit_slice(rs1, start=0, width=9, id=7905, pos=[(0,117,18)])
  bit_slice.7920: bits[14] = bit_slice(rs1, start=13, width=14, id=7920, pos=[(0,125,26)])
  rotate_18__1: bits[14] = bit_slice(rs1, start=18, width=14, id=3827, pos=[(0,4,9)])
  bit_slice.7922: bits[14] = bit_slice(rs1, start=0, width=14, id=7922, pos=[(0,125,26)])
  bit_slice.7914: bits[4] = bit_slice(rs1, start=0, width=4, id=7914, pos=[(0,99,23)])
  bit_slice.7932: bits[4] = bit_slice(rs2, start=23, width=4, id=7932, pos=[(0,169,41)])
  bit_slice.7957: bits[10] = bit_slice(rs1, start=7, width=10, id=7957, pos=[(0,110,20)])
  bit_slice.7864: bits[10] = bit_slice(rs1, start=9, width=10, id=7864, pos=[(0,225,28)])
  bit_slice.7956: bits[7] = bit_slice(rs1, start=2, width=7, id=7956, pos=[(0,110,20)])
  rotation_3__6: bits[7] = bit_slice(rs1, start=25, width=7, id=3845, pos=[(0,4,9)])
  bit_slice.7941: bits[7] = bit_slice(rs2, start=15, width=7, id=7941, pos=[(0,184,44)])
  bit_slice.7901: bits[10] = bit_slice(rs1, start=2, width=10, id=7901, pos=[(0,117,18)])
  bit_slice.7902: bits[10] = bit_slice(rs1, start=13, width=10, id=7902, pos=[(0,117,18)])
  rot_c__1: bits[10] = bit_slice(rs1, start=22, width=10, id=3803, pos=[(0,4,9)])
  bit_slice.7911: bits[14] = bit_slice(rs1, start=7, width=14, id=7911, pos=[(0,99,23)])
  bit_slice.7788: bits[14] = bit_slice(rs1, start=3, width=14, id=7788, pos=[(0,99,23)])
  bit_slice.7928: bits[14] = bit_slice(rs1, start=14, width=14, id=7928, pos=[(0,169,41)])
  bit_slice.7929: bits[14] = bit_slice(rs2, start=9, width=14, id=7929, pos=[(0,169,41)])
  bit_slice.7952: bits[13] = bit_slice(rs1, start=17, width=13, id=7952, pos=[(0,110,20)])
  bit_slice.7891: bits[4] = bit_slice(rs1, start=2, width=4, id=7891, pos=[(0,211,46)])
  bit_slice.7892: bits[4] = bit_slice(rs1, start=7, width=4, id=7892, pos=[(0,211,46)])
  bit_slice.7918: bits[7] = bit_slice(rs1, start=6, width=7, id=7918, pos=[(0,125,26)])
  bit_slice.7919: bits[7] = bit_slice(rs1, start=11, width=7, id=7919, pos=[(0,125,26)])
  bit_slice.7945: bits[3] = bit_slice(rs1, start=19, width=3, id=7945, pos=[(0,225,28)])
  rotation_2__19: bits[3] = bit_slice(rs1, start=29, width=3, id=3905, pos=[(0,4,9)])
  bit_slice.7859: bits[3] = bit_slice(rs1, start=6, width=3, id=7859, pos=[(0,225,28)])
  eq.585: bits[1] = eq(instruction, literal.371, id=585)
  eq.584: bits[1] = eq(instruction, literal.376, id=584)
  literal.7479: bits[32] = literal(value=21, id=7479)
  literal.441: bits[32] = literal(value=20, id=441, pos=[(0,280,15)])
  literal.436: bits[32] = literal(value=19, id=436, pos=[(0,279,15)])
  literal.431: bits[32] = literal(value=18, id=431, pos=[(0,278,15)])
  literal.426: bits[32] = literal(value=17, id=426, pos=[(0,277,15)])
  literal.421: bits[32] = literal(value=16, id=421, pos=[(0,276,15)])
  literal.416: bits[32] = literal(value=15, id=416, pos=[(0,275,15)])
  literal.411: bits[32] = literal(value=14, id=411, pos=[(0,274,15)])
  literal.406: bits[32] = literal(value=13, id=406, pos=[(0,273,15)])
  literal.401: bits[32] = literal(value=12, id=401, pos=[(0,272,15)])
  eq.581: bits[1] = eq(instruction, literal.391, id=581)
  eq.580: bits[1] = eq(instruction, literal.396, id=580)
  literal.381: bits[32] = literal(value=8, id=381, pos=[(0,268,15)])
  literal.366: bits[32] = literal(value=5, id=366, pos=[(0,265,15)])
  literal.361: bits[32] = literal(value=4, id=361, pos=[(0,264,15)])
  literal.356: bits[32] = literal(value=3, id=356, pos=[(0,263,15)])
  literal.351: bits[32] = literal(value=2, id=351, pos=[(0,262,15)])
  literal.346: bits[32] = literal(value=1, id=346, pos=[(0,261,15)])
  literal.341: bits[32] = literal(value=0, id=341, pos=[(0,260,15)])
  shrl.2247: bits[32] = shrl(rs1, bit_slice.2243, id=2247, pos=[(0,4,9)])
  shll.10081: bits[32] = shll(rs1, sub.10086, id=10081, pos=[(0,4,33)])
  shll.2255: bits[32] = shll(rs1, bit_slice.2243, id=2255, pos=[(0,9,9)])
  shrl.10083: bits[32] = shrl(rs1, sub.10086, id=10083, pos=[(0,9,26)])
  shrl.2260: bits[32] = shrl(rs1, rs2, id=2260, pos=[(0,13,9)])
  shll.2261: bits[32] = shll(rs1, sub.2259, id=2261, pos=[(0,13,26)])
  not.2263: bits[32] = not(rs1, id=2263, pos=[(0,17,8)])
  xor.2267: bits[32] = xor(rs1, rs2, id=2267, pos=[(0,25,10)])
  shift_1: bits[32] = concat(literal.3784, rotation_3__4, id=3786, pos=[(0,4,9)])
  combined_1: bits[32] = and(rotation_1__1, rs2, id=3010, pos=[(0,149,32)])
  combined_2: bits[32] = or(rotation_2__1, rs2, id=3011, pos=[(0,150,32)])
  bit_slice.7936: bits[9] = bit_slice(rs1, start=5, width=9, id=7936, pos=[(0,169,41)])
  bit_slice.7937: bits[9] = bit_slice(rs1, start=9, width=9, id=7937, pos=[(0,169,41)])
  rotation_3__9: bits[9] = bit_slice(rs2, start=0, width=9, id=3866, pos=[(0,4,33)])
  combined_1__1: bits[32] = and(rotation_1, rs2, id=3117, pos=[(0,135,30)])
  combined_2__1: bits[32] = or(rotation_2, rs2, id=3118, pos=[(0,136,30)])
  rotation_3: bits[32] = concat(rotation_3__5, rotation_3__4, id=7963, pos=[(0,4,26)])
  result__39: bits[2] = xor(bit_slice.7899, rotation_2__12, bit_slice.7900, id=5900, pos=[(0,211,46)])
  bit_slice.7896: bits[5] = bit_slice(rs1, start=21, width=5, id=7896, pos=[(0,211,46)])
  result__37: bits[21] = xor(bit_slice.7893, bit_slice.7894, bit_slice.7895, id=5892, pos=[(0,211,46)])
  xor.5917: bits[2] = xor(rotation_2__12, bit_slice.7909, bit_slice.7910, id=5917, pos=[(0,117,18)])
  xor.5913: bits[11] = xor(bit_slice.7906, bit_slice.7907, bit_slice.7908, id=5913, pos=[(0,117,18)])
  xor.7436: bits[3] = xor(bit_slice.7916, bit_slice.7917, id=7436, pos=[(0,99,23)])
  bit_slice.7915: bits[4] = bit_slice(rs1, start=11, width=4, id=7915, pos=[(0,99,23)])
  xor.5926: bits[11] = xor(bit_slice.7906, bit_slice.7907, bit_slice.7793, id=5926, pos=[(0,99,23)])
  xor.5951: bits[6] = xor(rotation_1__14, bit_slice.7926, bit_slice.7927, id=5951, pos=[(0,125,26)])
  xor.5947: bits[5] = xor(bit_slice.7897, bit_slice.7898, bit_slice.7925, id=5947, pos=[(0,125,26)])
  result__47: bits[6] = xor(bit_slice.7944, rotation_2__18, id=7439, pos=[(0,184,44)])
  result__46: bits[10] = xor(bit_slice.7942, bit_slice.7943, id=7438, pos=[(0,184,44)])
  xor.7440: bits[6] = xor(bit_slice.7950, bit_slice.7951, id=7440, pos=[(0,225,28)])
  xor.5998: bits[13] = xor(bit_slice.7948, bit_slice.7949, rotation_1__19, id=5998, pos=[(0,225,28)])
  eq.582: bits[1] = eq(instruction, literal.386, id=582)
  xor.5909: bits[9] = xor(bit_slice.7903, bit_slice.7904, bit_slice.7905, id=5909, pos=[(0,117,18)])
  xor.5943: bits[14] = xor(bit_slice.7920, rotate_18__1, bit_slice.7922, id=5943, pos=[(0,125,26)])
  bit_slice.7934: bits[5] = bit_slice(rs1, start=4, width=5, id=7934, pos=[(0,169,41)])
  bit_slice.7935: bits[5] = bit_slice(rs2, start=27, width=5, id=7935, pos=[(0,169,41)])
  result__41: bits[4] = xor(rotation_1__11, bit_slice.7914, bit_slice.7932, id=5960, pos=[(0,169,41)])
  xor.7441: bits[10] = xor(bit_slice.7957, bit_slice.7864, id=7441, pos=[(0,110,20)])
  xor.6015: bits[7] = xor(rotation_3__5, bit_slice.7956, rotation_3__6, id=6015, pos=[(0,110,20)])
  result__45: bits[7] = xor(rotation_3__6, bit_slice.7941, id=7437, pos=[(0,184,44)])
  xor.5905: bits[10] = xor(bit_slice.7901, bit_slice.7902, rot_c__1, id=5905, pos=[(0,117,18)])
  xor.5922: bits[14] = xor(bit_slice.7911, rotate_18__1, bit_slice.7788, id=5922, pos=[(0,99,23)])
  result__40: bits[14] = xor(bit_slice.7928, rotate_18__1, bit_slice.7929, id=5956, pos=[(0,169,41)])
  xor.5994: bits[10] = xor(rot_c__1, bit_slice.7942, bit_slice.7864, id=5994, pos=[(0,225,28)])
  bit_slice.7953: bits[2] = bit_slice(rs1, start=30, width=2, id=7953, pos=[(0,110,20)])
  bit_slice.7881: bits[2] = bit_slice(rs1, start=23, width=2, id=7881, pos=[(0,110,20)])
  xor.6007: bits[13] = xor(bit_slice.7952, rotation_1__19, bit_slice.7949, id=6007, pos=[(0,110,20)])
  bit_slice.7938: bits[9] = bit_slice(rs1, start=16, width=9, id=7938, pos=[(0,184,44)])
  bit_slice.7939: bits[9] = bit_slice(rs2, start=6, width=9, id=7939, pos=[(0,184,44)])
  result__36: bits[4] = xor(rotation_1__11, bit_slice.7891, bit_slice.7892, id=5888, pos=[(0,211,46)])
  xor.5939: bits[7] = xor(bit_slice.7918, bit_slice.7919, rotation_3__6, id=5939, pos=[(0,125,26)])
  xor.5990: bits[3] = xor(bit_slice.7945, rotation_2__19, bit_slice.7859, id=5990, pos=[(0,225,28)])
  or.10756: bits[1] = or(eq.585, eq.584, id=10756)
  eq.570: bits[1] = eq(instruction, literal.7479, id=570)
  eq.571: bits[1] = eq(instruction, literal.441, id=571)
  eq.572: bits[1] = eq(instruction, literal.436, id=572)
  eq.573: bits[1] = eq(instruction, literal.431, id=573)
  eq.574: bits[1] = eq(instruction, literal.426, id=574)
  eq.575: bits[1] = eq(instruction, literal.421, id=575)
  eq.576: bits[1] = eq(instruction, literal.416, id=576)
  eq.577: bits[1] = eq(instruction, literal.411, id=577)
  eq.578: bits[1] = eq(instruction, literal.406, id=578)
  eq.579: bits[1] = eq(instruction, literal.401, id=579)
  or.10652: bits[1] = or(eq.581, eq.580, id=10652)
  eq.583: bits[1] = eq(instruction, literal.381, id=583)
  eq.586: bits[1] = eq(instruction, literal.366, id=586)
  eq.587: bits[1] = eq(instruction, literal.361, id=587)
  eq.588: bits[1] = eq(instruction, literal.356, id=588)
  eq.589: bits[1] = eq(instruction, literal.351, id=589)
  eq.590: bits[1] = eq(instruction, literal.346, id=590)
  eq.591: bits[1] = eq(instruction, literal.341, id=591)
  or.2249: bits[32] = or(shrl.2247, shll.10081, id=2249, pos=[(0,4,26)])
  or.2257: bits[32] = or(shll.2255, shrl.10083, id=2257, pos=[(0,9,19)])
  or.2262: bits[32] = or(shrl.2260, shll.2261, id=2262, pos=[(0,13,19)])
  nor.2264: bits[32] = nor(not.2263, rs2, id=2264, pos=[(0,17,8)])
  nand.2266: bits[32] = nand(not.2263, rs2, id=2266, pos=[(0,21,8)])
  not.2268: bits[32] = not(xor.2267, id=2268, pos=[(0,25,4)])
  xor.3012: bits[32] = xor(rotation_1__1, rotation_2__1, shift_1, combined_1, combined_2, id=3012, pos=[(0,152,51)])
  result__43: bits[9] = xor(bit_slice.7936, bit_slice.7937, rotation_3__9, id=5968, pos=[(0,169,41)])
  xor.3120: bits[32] = xor(rotation_1, rotation_2, rotation_3, combined_1__1, combined_2__1, rotation_3, rs2, id=3120, pos=[(0,140,65)])
  result__23: bits[1] = bit_slice(rs1, start=25, width=1, id=4285, pos=[(0,38,42)])
  result__25: bits[1] = bit_slice(rs1, start=26, width=1, id=4286, pos=[(0,39,42)])
  result__27: bits[1] = bit_slice(rs1, start=27, width=1, id=4287, pos=[(0,40,42)])
  result__29: bits[1] = bit_slice(rs1, start=28, width=1, id=4288, pos=[(0,41,42)])
  result__31: bits[1] = bit_slice(rs1, start=29, width=1, id=4289, pos=[(0,42,42)])
  result__33: bits[1] = bit_slice(rs1, start=30, width=1, id=4290, pos=[(0,43,42)])
  result__35: bits[1] = bit_slice(rs1, start=31, width=1, id=4291, pos=[(0,44,42)])
  result__34: bits[1] = bit_slice(rs1, start=15, width=1, id=4275, pos=[(0,44,42)])
  result__32: bits[1] = bit_slice(rs1, start=14, width=1, id=4274, pos=[(0,43,42)])
  result__30: bits[1] = bit_slice(rs1, start=13, width=1, id=4273, pos=[(0,42,42)])
  result__28: bits[1] = bit_slice(rs1, start=12, width=1, id=4272, pos=[(0,41,42)])
  result__19: bits[1] = bit_slice(rs1, start=23, width=1, id=4283, pos=[(0,44,42)])
  result__15: bits[1] = bit_slice(rs1, start=21, width=1, id=4281, pos=[(0,42,42)])
  result__11: bits[1] = bit_slice(rs1, start=19, width=1, id=4279, pos=[(0,40,42)])
  result__7: bits[1] = bit_slice(rs1, start=17, width=1, id=4277, pos=[(0,38,42)])
  bit_slice.10569: bits[1] = bit_slice(result__39, start=0, width=1, id=10569)
  result__38: bits[5] = xor(bit_slice.7896, bit_slice.7897, bit_slice.7898, id=5896, pos=[(0,211,46)])
  bit_slice.10568: bits[1] = bit_slice(result__37, start=20, width=1, id=10568)
  bit_slice.10572: bits[1] = bit_slice(xor.5917, start=0, width=1, id=10572)
  bit_slice.10571: bits[6] = bit_slice(xor.5913, start=5, width=6, id=10571)
  bit_slice.10575: bits[2] = bit_slice(xor.7436, start=0, width=2, id=10575)
  xor.5930: bits[4] = xor(bit_slice.7914, bit_slice.7915, rotation_1__11, id=5930, pos=[(0,99,23)])
  bit_slice.10574: bits[1] = bit_slice(xor.5926, start=10, width=1, id=10574)
  bit_slice.10578: bits[5] = bit_slice(xor.5951, start=0, width=5, id=10578)
  bit_slice.10577: bits[2] = bit_slice(xor.5947, start=3, width=2, id=10577)
  bit_slice.10583: bits[5] = bit_slice(result__47, start=0, width=5, id=10583)
  bit_slice.10582: bits[2] = bit_slice(result__46, start=8, width=2, id=10582)
  bit_slice.10586: bits[5] = bit_slice(xor.7440, start=0, width=5, id=10586)
  bit_slice.10585: bits[2] = bit_slice(xor.5998, start=11, width=2, id=10585)
  or.10681: bits[1] = or(eq.582, eq.580, id=10681)
  result__9: bits[1] = bit_slice(rs1, start=18, width=1, id=4278, pos=[(0,39,42)])
  result__13: bits[1] = bit_slice(rs1, start=20, width=1, id=4280, pos=[(0,41,42)])
  result__17: bits[1] = bit_slice(rs1, start=22, width=1, id=4282, pos=[(0,43,42)])
  result__26: bits[1] = bit_slice(rs1, start=11, width=1, id=4271, pos=[(0,40,42)])
  result__24: bits[1] = bit_slice(rs1, start=10, width=1, id=4270, pos=[(0,39,42)])
  result__22: bits[1] = bit_slice(rs1, start=9, width=1, id=4269, pos=[(0,38,42)])
  result__21: bits[1] = bit_slice(rs1, start=24, width=1, id=4284, pos=[(0,37,42)])
  result__18: bits[1] = bit_slice(rs1, start=7, width=1, id=4299, pos=[(0,44,42)])
  result__14: bits[1] = bit_slice(rs1, start=5, width=1, id=4297, pos=[(0,42,42)])
  result__10: bits[1] = bit_slice(rs1, start=3, width=1, id=4295, pos=[(0,40,42)])
  bit_slice.10518: bits[4] = bit_slice(xor.5913, start=0, width=4, id=10518)
  bit_slice.10517: bits[2] = bit_slice(xor.5909, start=7, width=2, id=10517)
  bit_slice.10523: bits[2] = bit_slice(xor.5947, start=0, width=2, id=10523)
  bit_slice.10522: bits[4] = bit_slice(xor.5943, start=10, width=4, id=10522)
  result__42: bits[5] = xor(bit_slice.7898, bit_slice.7934, bit_slice.7935, id=5964, pos=[(0,169,41)])
  bit_slice.10525: bits[1] = bit_slice(result__41, start=3, width=1, id=10525)
  bit_slice.10532: bits[1] = bit_slice(xor.7441, start=0, width=1, id=10532)
  bit_slice.10531: bits[5] = bit_slice(xor.6015, start=2, width=5, id=10531)
  or.10709: bits[1] = or(eq.582, eq.581, id=10709)
  bit_slice.10623: bits[1] = bit_slice(rs2, start=0, width=1, id=10623)
  literal.11050: bits[1] = literal(value=0, id=11050, pos=[(0,3,32)])
  bit_slice.10624: bits[1] = bit_slice(rs2, start=7, width=1, id=10624)
  result__20: bits[1] = bit_slice(rs1, start=8, width=1, id=4268, pos=[(0,37,42)])
  result__6: bits[1] = bit_slice(rs1, start=1, width=1, id=4293, pos=[(0,38,42)])
  bit_slice.10500: bits[1] = bit_slice(result__46, start=0, width=1, id=10500)
  bit_slice.10499: bits[1] = bit_slice(result__45, start=6, width=1, id=10499)
  result__16: bits[1] = bit_slice(rs1, start=6, width=1, id=4298, pos=[(0,43,42)])
  bit_slice.10460: bits[5] = bit_slice(xor.5909, start=0, width=5, id=10460)
  bit_slice.10459: bits[1] = bit_slice(xor.5905, start=9, width=1, id=10459)
  bit_slice.10463: bits[1] = bit_slice(xor.5926, start=0, width=1, id=10463)
  bit_slice.10462: bits[5] = bit_slice(xor.5922, start=9, width=5, id=10462)
  bit_slice.10468: bits[1] = bit_slice(result__41, start=0, width=1, id=10468)
  bit_slice.10467: bits[5] = bit_slice(result__40, start=9, width=5, id=10467)
  bit_slice.10473: bits[2] = bit_slice(xor.5998, start=0, width=2, id=10473)
  bit_slice.10472: bits[4] = bit_slice(xor.5994, start=6, width=4, id=10472)
  xor.6011: bits[2] = xor(bit_slice.7953, rotation_2__12, bit_slice.7881, id=6011, pos=[(0,110,20)])
  bit_slice.10475: bits[4] = bit_slice(xor.6007, start=9, width=4, id=10475)
  result__44: bits[9] = xor(bit_slice.7938, bit_slice.7939, bit_slice.7904, id=5973, pos=[(0,184,44)])
  result__8: bits[1] = bit_slice(rs1, start=2, width=1, id=4294, pos=[(0,39,42)])
  result__12: bits[1] = bit_slice(rs1, start=4, width=1, id=4296, pos=[(0,41,42)])
  result__5: bits[1] = bit_slice(rs1, start=16, width=1, id=4276, pos=[(0,37,42)])
  bit_slice.10407: bits[4] = bit_slice(result__37, start=0, width=4, id=10407)
  bit_slice.10967: bits[3] = bit_slice(result__36, start=1, width=3, id=10967)
  bit_slice.10413: bits[1] = bit_slice(xor.5943, start=0, width=1, id=10413)
  bit_slice.10972: bits[6] = bit_slice(xor.5939, start=1, width=6, id=10972)
  bit_slice.10419: bits[5] = bit_slice(xor.5994, start=0, width=5, id=10419)
  bit_slice.10977: bits[2] = bit_slice(xor.5990, start=1, width=2, id=10977)
  or.11049: bits[1] = or(or.10756, eq.581, eq.580, id=11049)
  concat.11046: bits[20] = concat(eq.570, eq.571, eq.572, eq.573, eq.574, eq.575, eq.576, eq.577, eq.578, eq.579, or.10652, eq.582, eq.583, eq.585, eq.586, eq.587, eq.588, eq.589, eq.590, eq.591, id=11046)
  bit_slice.10375: bits[1] = bit_slice(or.2249, start=31, width=1, id=10375)
  bit_slice.10376: bits[1] = bit_slice(or.2257, start=31, width=1, id=10376)
  bit_slice.10377: bits[1] = bit_slice(or.2262, start=31, width=1, id=10377)
  bit_slice.10378: bits[1] = bit_slice(nor.2264, start=31, width=1, id=10378)
  bit_slice.10379: bits[1] = bit_slice(nand.2266, start=31, width=1, id=10379)
  bit_slice.10380: bits[1] = bit_slice(not.2268, start=31, width=1, id=10380)
  bit_slice.10633: bits[1] = bit_slice(rs2, start=15, width=1, id=10633)
  bit_slice.10599: bits[1] = bit_slice(result__39, start=1, width=1, id=10599)
  bit_slice.10601: bits[1] = bit_slice(xor.5917, start=1, width=1, id=10601)
  bit_slice.10389: bits[1] = bit_slice(xor.3012, start=31, width=1, id=10389)
  bit_slice.10603: bits[1] = bit_slice(xor.7436, start=2, width=1, id=10603)
  bit_slice.10605: bits[1] = bit_slice(xor.5951, start=5, width=1, id=10605)
  bit_slice.10607: bits[1] = bit_slice(result__43, start=8, width=1, id=10607)
  bit_slice.10393: bits[1] = bit_slice(xor.3120, start=31, width=1, id=10393)
  bit_slice.10609: bits[1] = bit_slice(result__47, start=5, width=1, id=10609)
  bit_slice.10611: bits[1] = bit_slice(xor.7440, start=5, width=1, id=10611)
  bit_slice.10613: bits[1] = bit_slice(xor.7441, start=9, width=1, id=10613)
  concat.10982: bits[21] = concat(eq.570, eq.571, eq.572, eq.573, eq.574, eq.575, eq.576, eq.577, eq.578, eq.579, eq.580, eq.581, eq.582, eq.583, eq.585, eq.586, eq.587, eq.588, eq.589, eq.590, eq.591, id=10982)
  bit_slice.10352: bits[7] = bit_slice(or.2249, start=24, width=7, id=10352)
  bit_slice.10353: bits[7] = bit_slice(or.2257, start=24, width=7, id=10353)
  bit_slice.10354: bits[7] = bit_slice(or.2262, start=24, width=7, id=10354)
  bit_slice.10355: bits[7] = bit_slice(nor.2264, start=24, width=7, id=10355)
  bit_slice.10356: bits[7] = bit_slice(nand.2266, start=24, width=7, id=10356)
  bit_slice.10357: bits[7] = bit_slice(not.2268, start=24, width=7, id=10357)
  bit_slice.10631: bits[7] = bit_slice(rs2, start=8, width=7, id=10631)
  concat.10563: bits[7] = concat(result__23, result__25, result__27, result__29, result__31, result__33, result__35, id=10563)
  concat.10566: bits[7] = concat(result__34, result__33, result__32, result__31, result__30, result__29, result__28, id=10566)
  concat.10567: bits[7] = concat(result__31, result__27, result__23, result__19, result__15, result__11, result__7, id=10567)
  concat.10570: bits[7] = concat(bit_slice.10569, result__38, bit_slice.10568, id=10570)
  concat.10573: bits[7] = concat(bit_slice.10572, bit_slice.10571, id=10573)
  bit_slice.10366: bits[7] = bit_slice(xor.3012, start=24, width=7, id=10366)
  concat.10576: bits[7] = concat(bit_slice.10575, xor.5930, bit_slice.10574, id=10576)
  concat.10579: bits[7] = concat(bit_slice.10578, bit_slice.10577, id=10579)
  bit_slice.10580: bits[7] = bit_slice(result__43, start=1, width=7, id=10580)
  bit_slice.10370: bits[7] = bit_slice(xor.3120, start=24, width=7, id=10370)
  concat.10584: bits[7] = concat(bit_slice.10583, bit_slice.10582, id=10584)
  concat.10587: bits[7] = concat(bit_slice.10586, bit_slice.10585, id=10587)
  bit_slice.10588: bits[7] = bit_slice(xor.7441, start=2, width=7, id=10588)
  concat.11047: bits[20] = concat(eq.570, eq.571, eq.572, eq.573, eq.574, eq.575, eq.576, eq.577, eq.578, eq.579, eq.581, or.10681, eq.583, eq.585, eq.586, eq.587, eq.588, eq.589, eq.590, eq.591, id=11047)
  bit_slice.10329: bits[1] = bit_slice(or.2249, start=23, width=1, id=10329)
  bit_slice.10330: bits[1] = bit_slice(or.2257, start=23, width=1, id=10330)
  bit_slice.10331: bits[1] = bit_slice(or.2262, start=23, width=1, id=10331)
  bit_slice.10332: bits[1] = bit_slice(nor.2264, start=23, width=1, id=10332)
  bit_slice.10333: bits[1] = bit_slice(nand.2266, start=23, width=1, id=10333)
  bit_slice.10334: bits[1] = bit_slice(not.2268, start=23, width=1, id=10334)
  bit_slice.10543: bits[1] = bit_slice(result__37, start=19, width=1, id=10543)
  bit_slice.10545: bits[1] = bit_slice(xor.5913, start=4, width=1, id=10545)
  bit_slice.10343: bits[1] = bit_slice(xor.3012, start=23, width=1, id=10343)
  bit_slice.10547: bits[1] = bit_slice(xor.5926, start=9, width=1, id=10547)
  bit_slice.10549: bits[1] = bit_slice(xor.5947, start=2, width=1, id=10549)
  bit_slice.10551: bits[1] = bit_slice(result__43, start=0, width=1, id=10551)
  bit_slice.10347: bits[1] = bit_slice(xor.3120, start=23, width=1, id=10347)
  bit_slice.10553: bits[1] = bit_slice(result__46, start=7, width=1, id=10553)
  bit_slice.10555: bits[1] = bit_slice(xor.5998, start=10, width=1, id=10555)
  bit_slice.10557: bits[1] = bit_slice(xor.7441, start=1, width=1, id=10557)
  bit_slice.10306: bits[6] = bit_slice(or.2249, start=17, width=6, id=10306)
  bit_slice.10307: bits[6] = bit_slice(or.2257, start=17, width=6, id=10307)
  bit_slice.10308: bits[6] = bit_slice(or.2262, start=17, width=6, id=10308)
  bit_slice.10309: bits[6] = bit_slice(nor.2264, start=17, width=6, id=10309)
  bit_slice.10310: bits[6] = bit_slice(nand.2266, start=17, width=6, id=10310)
  bit_slice.10311: bits[6] = bit_slice(not.2268, start=17, width=6, id=10311)
  bit_slice.10627: bits[6] = bit_slice(rs2, start=1, width=6, id=10627)
  concat.10510: bits[6] = concat(result__7, result__9, result__11, result__13, result__15, result__17, id=10510)
  bit_slice.10628: bits[6] = bit_slice(rs1, start=9, width=6, id=10628)
  concat.10513: bits[6] = concat(result__26, result__25, result__24, result__23, result__22, result__21, id=10513)
  concat.10514: bits[6] = concat(result__30, result__26, result__22, result__18, result__14, result__10, id=10514)
  bit_slice.10515: bits[6] = bit_slice(result__37, start=13, width=6, id=10515)
  concat.10519: bits[6] = concat(bit_slice.10518, bit_slice.10517, id=10519)
  bit_slice.10320: bits[6] = bit_slice(xor.3012, start=17, width=6, id=10320)
  bit_slice.10520: bits[6] = bit_slice(xor.5926, start=3, width=6, id=10520)
  concat.10524: bits[6] = concat(bit_slice.10523, bit_slice.10522, id=10524)
  concat.10526: bits[6] = concat(result__42, bit_slice.10525, id=10526)
  bit_slice.10324: bits[6] = bit_slice(xor.3120, start=17, width=6, id=10324)
  bit_slice.10527: bits[6] = bit_slice(result__46, start=1, width=6, id=10527)
  bit_slice.10529: bits[6] = bit_slice(xor.5998, start=4, width=6, id=10529)
  concat.10533: bits[6] = concat(bit_slice.10532, bit_slice.10531, id=10533)
  concat.10985: bits[21] = concat(eq.570, eq.571, eq.572, eq.573, eq.574, eq.575, eq.576, eq.577, eq.578, eq.579, eq.580, or.10709, eq.583, eq.584, eq.585, eq.586, eq.587, eq.588, eq.589, eq.590, eq.591, id=10985)
  bit_slice.10283: bits[2] = bit_slice(or.2249, start=15, width=2, id=10283)
  bit_slice.10284: bits[2] = bit_slice(or.2257, start=15, width=2, id=10284)
  bit_slice.10285: bits[2] = bit_slice(or.2262, start=15, width=2, id=10285)
  bit_slice.10286: bits[2] = bit_slice(nor.2264, start=15, width=2, id=10286)
  bit_slice.10287: bits[2] = bit_slice(nand.2266, start=15, width=2, id=10287)
  bit_slice.10288: bits[2] = bit_slice(not.2268, start=15, width=2, id=10288)
  concat.10479: bits[2] = concat(bit_slice.10623, result__34, id=10479)
  concat.10482: bits[2] = concat(literal.11050, bit_slice.10624, id=10482)
  concat.10483: bits[2] = concat(result__19, result__20, id=10483)
  concat.10486: bits[2] = concat(result__20, result__19, id=10486)
  concat.10488: bits[2] = concat(result__6, result__33, id=10488)
  bit_slice.10489: bits[2] = bit_slice(result__37, start=11, width=2, id=10489)
  bit_slice.10491: bits[2] = bit_slice(xor.5909, start=5, width=2, id=10491)
  bit_slice.10297: bits[2] = bit_slice(xor.3012, start=15, width=2, id=10297)
  bit_slice.10493: bits[2] = bit_slice(xor.5926, start=1, width=2, id=10493)
  bit_slice.10495: bits[2] = bit_slice(xor.5943, start=8, width=2, id=10495)
  bit_slice.10497: bits[2] = bit_slice(result__41, start=1, width=2, id=10497)
  bit_slice.10301: bits[2] = bit_slice(xor.3120, start=15, width=2, id=10301)
  concat.10501: bits[2] = concat(bit_slice.10500, bit_slice.10499, id=10501)
  bit_slice.10502: bits[2] = bit_slice(xor.5998, start=2, width=2, id=10502)
  bit_slice.10504: bits[2] = bit_slice(xor.6015, start=0, width=2, id=10504)
  concat.10399: bits[22] = concat(eq.570, eq.571, eq.572, eq.573, eq.574, eq.575, eq.576, eq.577, eq.578, eq.579, eq.580, eq.581, eq.582, eq.583, eq.584, eq.585, eq.586, eq.587, eq.588, eq.589, eq.590, eq.591, id=10399)
  bit_slice.10260: bits[6] = bit_slice(or.2249, start=9, width=6, id=10260)
  bit_slice.10261: bits[6] = bit_slice(or.2257, start=9, width=6, id=10261)
  bit_slice.10262: bits[6] = bit_slice(or.2262, start=9, width=6, id=10262)
  bit_slice.10263: bits[6] = bit_slice(nor.2264, start=9, width=6, id=10263)
  bit_slice.10264: bits[6] = bit_slice(nand.2266, start=9, width=6, id=10264)
  bit_slice.10265: bits[6] = bit_slice(not.2268, start=9, width=6, id=10265)
  concat.10452: bits[6] = concat(result__22, result__24, result__26, result__28, result__30, result__32, id=10452)
  bit_slice.10621: bits[6] = bit_slice(rs1, start=17, width=6, id=10621)
  concat.10455: bits[6] = concat(result__18, result__17, result__16, result__15, result__14, result__13, id=10455)
  concat.10456: bits[6] = concat(result__29, result__25, result__21, result__17, result__13, result__9, id=10456)
  bit_slice.10457: bits[6] = bit_slice(result__37, start=5, width=6, id=10457)
  concat.10461: bits[6] = concat(bit_slice.10460, bit_slice.10459, id=10461)
  bit_slice.10274: bits[6] = bit_slice(xor.3012, start=9, width=6, id=10274)
  concat.10464: bits[6] = concat(bit_slice.10463, bit_slice.10462, id=10464)
  bit_slice.10465: bits[6] = bit_slice(xor.5943, start=2, width=6, id=10465)
  concat.10469: bits[6] = concat(bit_slice.10468, bit_slice.10467, id=10469)
  bit_slice.10278: bits[6] = bit_slice(xor.3120, start=9, width=6, id=10278)
  bit_slice.10470: bits[6] = bit_slice(result__45, start=0, width=6, id=10470)
  concat.10474: bits[6] = concat(bit_slice.10473, bit_slice.10472, id=10474)
  concat.10476: bits[6] = concat(xor.6011, bit_slice.10475, id=10476)
  concat.10983: bits[21] = concat(eq.570, eq.571, eq.572, eq.573, eq.574, eq.575, eq.576, eq.577, eq.578, eq.579, eq.581, or.10681, eq.583, eq.584, eq.585, eq.586, eq.587, eq.588, eq.589, eq.590, eq.591, id=10983)
  bit_slice.10237: bits[1] = bit_slice(or.2249, start=8, width=1, id=10237)
  bit_slice.10238: bits[1] = bit_slice(or.2257, start=8, width=1, id=10238)
  bit_slice.10239: bits[1] = bit_slice(or.2262, start=8, width=1, id=10239)
  bit_slice.10240: bits[1] = bit_slice(nor.2264, start=8, width=1, id=10240)
  bit_slice.10241: bits[1] = bit_slice(nand.2266, start=8, width=1, id=10241)
  bit_slice.10242: bits[1] = bit_slice(not.2268, start=8, width=1, id=10242)
  bit_slice.10432: bits[1] = bit_slice(result__37, start=4, width=1, id=10432)
  bit_slice.10434: bits[1] = bit_slice(xor.5905, start=8, width=1, id=10434)
  bit_slice.10251: bits[1] = bit_slice(xor.3012, start=8, width=1, id=10251)
  bit_slice.10436: bits[1] = bit_slice(xor.5922, start=8, width=1, id=10436)
  bit_slice.10438: bits[1] = bit_slice(xor.5943, start=1, width=1, id=10438)
  bit_slice.10440: bits[1] = bit_slice(result__40, start=8, width=1, id=10440)
  bit_slice.10255: bits[1] = bit_slice(xor.3120, start=8, width=1, id=10255)
  bit_slice.10442: bits[1] = bit_slice(result__44, start=8, width=1, id=10442)
  bit_slice.10444: bits[1] = bit_slice(xor.5994, start=5, width=1, id=10444)
  bit_slice.10446: bits[1] = bit_slice(xor.6007, start=8, width=1, id=10446)
  concat.10987: bits[21] = concat(eq.570, eq.571, eq.572, eq.573, eq.574, eq.575, eq.576, eq.577, eq.578, eq.579, eq.580, eq.581, eq.582, eq.583, or.10756, eq.586, eq.587, eq.588, eq.589, eq.590, eq.591, id=10987)
  bit_slice.10956: bits[7] = bit_slice(or.2249, start=1, width=7, id=10956)
  bit_slice.10957: bits[7] = bit_slice(or.2257, start=1, width=7, id=10957)
  bit_slice.10958: bits[7] = bit_slice(or.2262, start=1, width=7, id=10958)
  bit_slice.10959: bits[7] = bit_slice(nor.2264, start=1, width=7, id=10959)
  bit_slice.10960: bits[7] = bit_slice(nand.2266, start=1, width=7, id=10960)
  bit_slice.10961: bits[7] = bit_slice(not.2268, start=1, width=7, id=10961)
  bit_slice.10962: bits[7] = bit_slice(rs1, start=1, width=7, id=10962)
  concat.10963: bits[7] = concat(rotation_1__8, result__6, result__8, result__10, result__12, result__14, result__16, id=10963)
  concat.10965: bits[7] = concat(result__11, result__10, result__9, result__8, result__7, result__6, result__5, id=10965)
  concat.10966: bits[7] = concat(result__32, result__28, result__24, result__20, result__16, result__12, result__8, id=10966)
  concat.10968: bits[7] = concat(bit_slice.10407, bit_slice.10967, id=10968)
  bit_slice.10969: bits[7] = bit_slice(xor.5905, start=1, width=7, id=10969)
  bit_slice.10970: bits[7] = bit_slice(xor.3012, start=1, width=7, id=10970)
  bit_slice.10971: bits[7] = bit_slice(xor.5922, start=1, width=7, id=10971)
  concat.10973: bits[7] = concat(bit_slice.10413, bit_slice.10972, id=10973)
  bit_slice.10974: bits[7] = bit_slice(result__40, start=1, width=7, id=10974)
  bit_slice.10975: bits[7] = bit_slice(xor.3120, start=1, width=7, id=10975)
  bit_slice.10976: bits[7] = bit_slice(result__44, start=1, width=7, id=10976)
  concat.10978: bits[7] = concat(bit_slice.10419, bit_slice.10977, id=10978)
  bit_slice.10979: bits[7] = bit_slice(xor.6007, start=1, width=7, id=10979)
  concat.11048: bits[19] = concat(eq.570, eq.571, eq.572, eq.573, eq.574, eq.575, eq.576, eq.577, eq.578, eq.579, eq.582, eq.583, or.11049, eq.586, eq.587, eq.588, eq.589, eq.590, eq.591, id=11048)
  bit_slice.10932: bits[1] = bit_slice(or.2249, start=0, width=1, id=10932)
  bit_slice.10933: bits[1] = bit_slice(or.2257, start=0, width=1, id=10933)
  bit_slice.10934: bits[1] = bit_slice(or.2262, start=0, width=1, id=10934)
  bit_slice.10935: bits[1] = bit_slice(nor.2264, start=0, width=1, id=10935)
  bit_slice.10936: bits[1] = bit_slice(nand.2266, start=0, width=1, id=10936)
  bit_slice.10937: bits[1] = bit_slice(not.2268, start=0, width=1, id=10937)
  bit_slice.10943: bits[1] = bit_slice(result__36, start=0, width=1, id=10943)
  bit_slice.10945: bits[1] = bit_slice(xor.5905, start=0, width=1, id=10945)
  bit_slice.10946: bits[1] = bit_slice(xor.3012, start=0, width=1, id=10946)
  bit_slice.10947: bits[1] = bit_slice(xor.5922, start=0, width=1, id=10947)
  bit_slice.10948: bits[1] = bit_slice(xor.5939, start=0, width=1, id=10948)
  bit_slice.10950: bits[1] = bit_slice(result__40, start=0, width=1, id=10950)
  bit_slice.10951: bits[1] = bit_slice(xor.3120, start=0, width=1, id=10951)
  bit_slice.10952: bits[1] = bit_slice(result__44, start=0, width=1, id=10952)
  bit_slice.10953: bits[1] = bit_slice(xor.5990, start=0, width=1, id=10953)
  bit_slice.10955: bits[1] = bit_slice(xor.6007, start=0, width=1, id=10955)
  one_hot_sel.10991: bits[1] = one_hot_sel(concat.11046, cases=[bit_slice.10375, bit_slice.10376, bit_slice.10377, bit_slice.10378, bit_slice.10379, bit_slice.10380, bit_slice.10633, result__21, result__18, result__35, bit_slice.10599, bit_slice.10601, bit_slice.10389, bit_slice.10603, bit_slice.10605, bit_slice.10607, bit_slice.10393, bit_slice.10609, bit_slice.10611, bit_slice.10613], id=10991)
  one_hot_sel.10668: bits[7] = one_hot_sel(concat.10982, cases=[bit_slice.10352, bit_slice.10353, bit_slice.10354, bit_slice.10355, bit_slice.10356, bit_slice.10357, bit_slice.10631, concat.10563, rotation_3__5, concat.10566, concat.10567, concat.10570, concat.10573, bit_slice.10366, concat.10576, concat.10579, bit_slice.10580, bit_slice.10370, concat.10584, concat.10587, bit_slice.10588], id=10668)
  one_hot_sel.10995: bits[1] = one_hot_sel(concat.11047, cases=[bit_slice.10329, bit_slice.10330, bit_slice.10331, bit_slice.10332, bit_slice.10333, bit_slice.10334, bit_slice.10624, result__5, result__34, result__27, bit_slice.10543, bit_slice.10545, bit_slice.10343, bit_slice.10547, bit_slice.10549, bit_slice.10551, bit_slice.10347, bit_slice.10553, bit_slice.10555, bit_slice.10557], id=10995)
  one_hot_sel.10697: bits[6] = one_hot_sel(concat.10982, cases=[bit_slice.10306, bit_slice.10307, bit_slice.10308, bit_slice.10309, bit_slice.10310, bit_slice.10311, bit_slice.10627, concat.10510, bit_slice.10628, concat.10513, concat.10514, bit_slice.10515, concat.10519, bit_slice.10320, bit_slice.10520, concat.10524, concat.10526, bit_slice.10324, bit_slice.10527, bit_slice.10529, concat.10533], id=10697)
  one_hot_sel.10722: bits[2] = one_hot_sel(concat.10985, cases=[bit_slice.10283, bit_slice.10284, bit_slice.10285, bit_slice.10286, bit_slice.10287, bit_slice.10288, concat.10479, concat.10482, concat.10483, concat.10486, concat.10488, bit_slice.10489, bit_slice.10491, bit_slice.10297, bit_slice.10493, bit_slice.10495, bit_slice.10497, bit_slice.10301, concat.10501, bit_slice.10502, bit_slice.10504], id=10722)
  one_hot_sel.10282: bits[6] = one_hot_sel(concat.10399, cases=[bit_slice.10260, bit_slice.10261, bit_slice.10262, bit_slice.10263, bit_slice.10264, bit_slice.10265, bit_slice.10628, bit_slice.10627, concat.10452, bit_slice.10621, concat.10455, concat.10456, bit_slice.10457, concat.10461, bit_slice.10274, concat.10464, bit_slice.10465, concat.10469, bit_slice.10278, bit_slice.10470, concat.10474, concat.10476], id=10282)
  one_hot_sel.10747: bits[1] = one_hot_sel(concat.10983, cases=[bit_slice.10237, bit_slice.10238, bit_slice.10239, bit_slice.10240, bit_slice.10241, bit_slice.10242, result__20, bit_slice.10623, result__34, result__5, result__12, bit_slice.10432, bit_slice.10434, bit_slice.10251, bit_slice.10436, bit_slice.10438, bit_slice.10440, bit_slice.10255, bit_slice.10442, bit_slice.10444, bit_slice.10446], id=10747)
  one_hot_sel.10816: bits[7] = one_hot_sel(concat.10987, cases=[bit_slice.10956, bit_slice.10957, bit_slice.10958, bit_slice.10959, bit_slice.10960, bit_slice.10961, bit_slice.10962, concat.10963, rotation_3__6, concat.10965, concat.10966, concat.10968, bit_slice.10969, bit_slice.10970, bit_slice.10971, concat.10973, bit_slice.10974, bit_slice.10975, bit_slice.10976, concat.10978, bit_slice.10979], id=10816)
  one_hot_sel.11020: bits[1] = one_hot_sel(concat.11048, cases=[bit_slice.10932, bit_slice.10933, bit_slice.10934, bit_slice.10935, bit_slice.10936, bit_slice.10937, rotation_1__8, result__18, result__21, bit_slice.10943, bit_slice.10945, bit_slice.10946, bit_slice.10947, bit_slice.10948, bit_slice.10950, bit_slice.10951, bit_slice.10952, bit_slice.10953, bit_slice.10955], id=11020)
  literal.3922: bits[32] = literal(value=22, id=3922)
  concat.10980: bits[32] = concat(one_hot_sel.10991, one_hot_sel.10668, one_hot_sel.10995, one_hot_sel.10697, one_hot_sel.10722, one_hot_sel.10282, one_hot_sel.10747, one_hot_sel.10816, one_hot_sel.11020, id=10980)
  ult.3923: bits[1] = ult(instruction, literal.3922, id=3923)
  ret tuple.785: (bits[32], bits[1]) = tuple(concat.10980, ult.3923, id=785)
}
